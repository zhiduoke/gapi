// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.9.1
// source: http.proto

package api

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/zhiduoke/gapi/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EnumTyp int32

const (
	EnumTyp_m EnumTyp = 0
	EnumTyp_n EnumTyp = 1
)

// Enum value maps for EnumTyp.
var (
	EnumTyp_name = map[int32]string{
		0: "m",
		1: "n",
	}
	EnumTyp_value = map[string]int32{
		"m": 0,
		"n": 1,
	}
)

func (x EnumTyp) Enum() *EnumTyp {
	p := new(EnumTyp)
	*p = x
	return p
}

func (x EnumTyp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumTyp) Descriptor() protoreflect.EnumDescriptor {
	return file_http_proto_enumTypes[0].Descriptor()
}

func (EnumTyp) Type() protoreflect.EnumType {
	return &file_http_proto_enumTypes[0]
}

func (x EnumTyp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumTyp.Descriptor instead.
func (EnumTyp) EnumDescriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{0}
}

type Nest_NestEnum int32

const (
	Nest_i Nest_NestEnum = 0
	Nest_j Nest_NestEnum = 1
)

// Enum value maps for Nest_NestEnum.
var (
	Nest_NestEnum_name = map[int32]string{
		0: "i",
		1: "j",
	}
	Nest_NestEnum_value = map[string]int32{
		"i": 0,
		"j": 1,
	}
)

func (x Nest_NestEnum) Enum() *Nest_NestEnum {
	p := new(Nest_NestEnum)
	*p = x
	return p
}

func (x Nest_NestEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Nest_NestEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_http_proto_enumTypes[1].Descriptor()
}

func (Nest_NestEnum) Type() protoreflect.EnumType {
	return &file_http_proto_enumTypes[1]
}

func (x Nest_NestEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Nest_NestEnum.Descriptor instead.
func (Nest_NestEnum) EnumDescriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{4, 0}
}

type AddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A int32 `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B int32 `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
}

func (x *AddRequest) Reset() {
	*x = AddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRequest) ProtoMessage() {}

func (x *AddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRequest.ProtoReflect.Descriptor instead.
func (*AddRequest) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{0}
}

func (x *AddRequest) GetA() int32 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *AddRequest) GetB() int32 {
	if x != nil {
		return x.B
	}
	return 0
}

type AddReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sum int32   `protobuf:"varint,1,opt,name=sum,proto3" json:"sum,omitempty"`
	E   EnumTyp `protobuf:"varint,2,opt,name=e,proto3,enum=service.demo.EnumTyp" json:"e,omitempty"`
	F   *Nest   `protobuf:"bytes,3,opt,name=f,proto3" json:"f,omitempty"`
}

func (x *AddReply) Reset() {
	*x = AddReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReply) ProtoMessage() {}

func (x *AddReply) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReply.ProtoReflect.Descriptor instead.
func (*AddReply) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{1}
}

func (x *AddReply) GetSum() int32 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *AddReply) GetE() EnumTyp {
	if x != nil {
		return x.E
	}
	return EnumTyp_m
}

func (x *AddReply) GetF() *Nest {
	if x != nil {
		return x.F
	}
	return nil
}

type Add2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A      int32  `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B      int32  `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
	UserId string `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *Add2Request) Reset() {
	*x = Add2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Add2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Add2Request) ProtoMessage() {}

func (x *Add2Request) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Add2Request.ProtoReflect.Descriptor instead.
func (*Add2Request) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{2}
}

func (x *Add2Request) GetA() int32 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *Add2Request) GetB() int32 {
	if x != nil {
		return x.B
	}
	return 0
}

func (x *Add2Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Add2Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sum int32  `protobuf:"varint,1,opt,name=sum,proto3" json:"sum,omitempty"`
	Uid string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *Add2Reply) Reset() {
	*x = Add2Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Add2Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Add2Reply) ProtoMessage() {}

func (x *Add2Reply) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Add2Reply.ProtoReflect.Descriptor instead.
func (*Add2Reply) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{3}
}

func (x *Add2Reply) GetSum() int32 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *Add2Reply) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type Nest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A int64         `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B *Nest         `protobuf:"bytes,2,opt,name=b,proto3" json:"b,omitempty"`
	D *Nest_NestMsg `protobuf:"bytes,3,opt,name=d,proto3" json:"d,omitempty"`
	E Nest_NestEnum `protobuf:"varint,4,opt,name=e,proto3,enum=service.demo.Nest_NestEnum" json:"e,omitempty"`
}

func (x *Nest) Reset() {
	*x = Nest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nest) ProtoMessage() {}

func (x *Nest) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nest.ProtoReflect.Descriptor instead.
func (*Nest) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{4}
}

func (x *Nest) GetA() int64 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *Nest) GetB() *Nest {
	if x != nil {
		return x.B
	}
	return nil
}

func (x *Nest) GetD() *Nest_NestMsg {
	if x != nil {
		return x.D
	}
	return nil
}

func (x *Nest) GetE() Nest_NestEnum {
	if x != nil {
		return x.E
	}
	return Nest_i
}

type SubReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A int32 `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B int32 `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
}

func (x *SubReq) Reset() {
	*x = SubReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubReq) ProtoMessage() {}

func (x *SubReq) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubReq.ProtoReflect.Descriptor instead.
func (*SubReq) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{5}
}

func (x *SubReq) GetA() int32 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *SubReq) GetB() int32 {
	if x != nil {
		return x.B
	}
	return 0
}

type SubResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SubResp) Reset() {
	*x = SubResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubResp) ProtoMessage() {}

func (x *SubResp) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubResp.ProtoReflect.Descriptor instead.
func (*SubResp) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{6}
}

func (x *SubResp) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type SubReq2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A int32 `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B int32 `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
}

func (x *SubReq2) Reset() {
	*x = SubReq2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubReq2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubReq2) ProtoMessage() {}

func (x *SubReq2) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubReq2.ProtoReflect.Descriptor instead.
func (*SubReq2) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{7}
}

func (x *SubReq2) GetA() int32 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *SubReq2) GetB() int32 {
	if x != nil {
		return x.B
	}
	return 0
}

type SubResp2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SubResp2) Reset() {
	*x = SubResp2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubResp2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubResp2) ProtoMessage() {}

func (x *SubResp2) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubResp2.ProtoReflect.Descriptor instead.
func (*SubResp2) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{8}
}

func (x *SubResp2) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type RequestBindReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromForm   string `protobuf:"bytes,1,opt,name=from_form,json=fromForm,proto3" json:"from_form,omitempty"`
	FromCtx    string `protobuf:"bytes,2,opt,name=from_ctx,json=fromCtx,proto3" json:"from_ctx,omitempty"`
	FromQuery  string `protobuf:"bytes,3,opt,name=from_query,json=fromQuery,proto3" json:"from_query,omitempty"`
	FromHeader string `protobuf:"bytes,4,opt,name=from_header,json=fromHeader,proto3" json:"from_header,omitempty"`
	FromParams string `protobuf:"bytes,5,opt,name=from_params,json=fromParams,proto3" json:"from_params,omitempty"`
}

func (x *RequestBindReq) Reset() {
	*x = RequestBindReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestBindReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestBindReq) ProtoMessage() {}

func (x *RequestBindReq) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestBindReq.ProtoReflect.Descriptor instead.
func (*RequestBindReq) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{9}
}

func (x *RequestBindReq) GetFromForm() string {
	if x != nil {
		return x.FromForm
	}
	return ""
}

func (x *RequestBindReq) GetFromCtx() string {
	if x != nil {
		return x.FromCtx
	}
	return ""
}

func (x *RequestBindReq) GetFromQuery() string {
	if x != nil {
		return x.FromQuery
	}
	return ""
}

func (x *RequestBindReq) GetFromHeader() string {
	if x != nil {
		return x.FromHeader
	}
	return ""
}

func (x *RequestBindReq) GetFromParams() string {
	if x != nil {
		return x.FromParams
	}
	return ""
}

type RequestBindResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Form   string `protobuf:"bytes,1,opt,name=form,proto3" json:"form,omitempty"`
	Ctx    string `protobuf:"bytes,2,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Query  string `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	Header string `protobuf:"bytes,4,opt,name=header,proto3" json:"header,omitempty"`
	Params string `protobuf:"bytes,5,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *RequestBindResp) Reset() {
	*x = RequestBindResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestBindResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestBindResp) ProtoMessage() {}

func (x *RequestBindResp) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestBindResp.ProtoReflect.Descriptor instead.
func (*RequestBindResp) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{10}
}

func (x *RequestBindResp) GetForm() string {
	if x != nil {
		return x.Form
	}
	return ""
}

func (x *RequestBindResp) GetCtx() string {
	if x != nil {
		return x.Ctx
	}
	return ""
}

func (x *RequestBindResp) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *RequestBindResp) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *RequestBindResp) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type Nest_NestMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	C *Nest `protobuf:"bytes,1,opt,name=c,proto3" json:"c,omitempty"`
}

func (x *Nest_NestMsg) Reset() {
	*x = Nest_NestMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nest_NestMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nest_NestMsg) ProtoMessage() {}

func (x *Nest_NestMsg) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nest_NestMsg.ProtoReflect.Descriptor instead.
func (*Nest_NestMsg) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Nest_NestMsg) GetC() *Nest {
	if x != nil {
		return x.C
	}
	return nil
}

var File_http_proto protoreflect.FileDescriptor

var file_http_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x1a, 0x16, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x28, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0c, 0x0a, 0x01, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x61, 0x12, 0x0c,
	0x0a, 0x01, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x62, 0x22, 0x63, 0x0a, 0x08,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x01, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x52, 0x01, 0x65, 0x12,
	0x20, 0x0a, 0x01, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x52, 0x01,
	0x66, 0x22, 0x5e, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x13, 0x0a, 0x01, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x05, 0xf8, 0xbf, 0xa7,
	0x17, 0x01, 0x52, 0x01, 0x61, 0x12, 0x13, 0x0a, 0x01, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x05, 0xf8, 0xbf, 0xa7, 0x17, 0x01, 0x52, 0x01, 0x62, 0x12, 0x25, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xd2, 0xbf, 0xa7, 0x17,
	0x03, 0x75, 0x69, 0x64, 0x88, 0xc0, 0xa7, 0x17, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x44, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x32, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x17,
	0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x05, 0xd8, 0xbf, 0xa7,
	0x17, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xd2, 0xbf, 0xa7, 0x17, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0xd2, 0x01, 0x0a, 0x04, 0x4e, 0x65, 0x73, 0x74,
	0x12, 0x0c, 0x0a, 0x01, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x61, 0x12, 0x20,
	0x0a, 0x01, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x52, 0x01, 0x62,
	0x12, 0x28, 0x0a, 0x01, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x2e,
	0x4e, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x01, 0x64, 0x12, 0x29, 0x0a, 0x01, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x01, 0x65, 0x1a, 0x2b, 0x0a, 0x07, 0x4e, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67,
	0x12, 0x20, 0x0a, 0x01, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x52,
	0x01, 0x63, 0x22, 0x18, 0x0a, 0x08, 0x4e, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x05,
	0x0a, 0x01, 0x69, 0x10, 0x00, 0x12, 0x05, 0x0a, 0x01, 0x6a, 0x10, 0x01, 0x22, 0x24, 0x0a, 0x06,
	0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x12, 0x0c, 0x0a, 0x01, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x01, 0x61, 0x12, 0x0c, 0x0a, 0x01, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x01, 0x62, 0x22, 0x21, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x25, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x32,
	0x12, 0x0c, 0x0a, 0x01, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x61, 0x12, 0x0c,
	0x0a, 0x01, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x62, 0x22, 0x22, 0x0a, 0x08,
	0x53, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xcc, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x69, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x88, 0xc0, 0xa7, 0x17, 0x00, 0x52, 0x08, 0x66,
	0x72, 0x6f, 0x6d, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x20, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x63, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x88, 0xc0, 0xa7, 0x17, 0x01,
	0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x43, 0x74, 0x78, 0x12, 0x24, 0x0a, 0x0a, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x88,
	0xc0, 0xa7, 0x17, 0x02, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x26, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x88, 0xc0, 0xa7, 0x17, 0x03, 0x52, 0x0a, 0x66, 0x72, 0x6f,
	0x6d, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x88, 0xc0,
	0xa7, 0x17, 0x04, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22,
	0x7d, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2a, 0x17,
	0x0a, 0x07, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x12, 0x05, 0x0a, 0x01, 0x6d, 0x10, 0x00,
	0x12, 0x05, 0x0a, 0x01, 0x6e, 0x10, 0x01, 0x32, 0xd4, 0x03, 0x0a, 0x07, 0x44, 0x65, 0x6d, 0x6f,
	0x41, 0x50, 0x49, 0x12, 0x47, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64,
	0x65, 0x6d, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x0e, 0xd2, 0xd3,
	0xee, 0x0b, 0x09, 0x0a, 0x04, 0x2f, 0x61, 0x64, 0x64, 0x40, 0x90, 0x4e, 0x12, 0x4e, 0x0a, 0x04,
	0x41, 0x64, 0x64, 0x32, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64,
	0x65, 0x6d, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x41,
	0x64, 0x64, 0x32, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x12, 0xd2, 0xd3, 0xee, 0x0b, 0x0d, 0x0a,
	0x05, 0x2f, 0x61, 0x64, 0x64, 0x32, 0x3a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x3f, 0x0a, 0x03,
	0x53, 0x75, 0x62, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x65,
	0x6d, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x0b, 0xd2, 0xd3, 0xee, 0x0b, 0x06, 0x0a, 0x04, 0x2f, 0x73, 0x75, 0x62, 0x12, 0x43, 0x0a,
	0x04, 0x53, 0x75, 0x62, 0x32, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x32, 0x1a, 0x16, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x52,
	0x65, 0x73, 0x70, 0x32, 0x22, 0x0c, 0xd2, 0xd3, 0xee, 0x0b, 0x07, 0x0a, 0x05, 0x2f, 0x73, 0x75,
	0x62, 0x32, 0x12, 0x77, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x69, 0x6e,
	0x64, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x65, 0x6d, 0x6f,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2b,
	0xd2, 0xd3, 0xee, 0x0b, 0x26, 0x0a, 0x1a, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x62, 0x69, 0x6e, 0x64, 0x2f, 0x3a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x3a, 0x08, 0x6d, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x74, 0x78, 0x1a, 0x31, 0xd2, 0xf7, 0xd6,
	0x0f, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x31, 0x39, 0x30, 0x39,
	0x30, 0xe2, 0xf7, 0xd6, 0x0f, 0x08, 0x68, 0x74, 0x74, 0x70, 0x6a, 0x73, 0x6f, 0x6e, 0xe8, 0xf7,
	0xd6, 0x0f, 0x88, 0x27, 0xf2, 0xf7, 0xd6, 0x0f, 0x05, 0x2f, 0x64, 0x65, 0x6d, 0x6f, 0x42, 0x07,
	0x5a, 0x05, 0x2e, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_http_proto_rawDescOnce sync.Once
	file_http_proto_rawDescData = file_http_proto_rawDesc
)

func file_http_proto_rawDescGZIP() []byte {
	file_http_proto_rawDescOnce.Do(func() {
		file_http_proto_rawDescData = protoimpl.X.CompressGZIP(file_http_proto_rawDescData)
	})
	return file_http_proto_rawDescData
}

var file_http_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_http_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_http_proto_goTypes = []interface{}{
	(EnumTyp)(0),            // 0: service.demo.EnumTyp
	(Nest_NestEnum)(0),      // 1: service.demo.Nest.NestEnum
	(*AddRequest)(nil),      // 2: service.demo.AddRequest
	(*AddReply)(nil),        // 3: service.demo.AddReply
	(*Add2Request)(nil),     // 4: service.demo.Add2Request
	(*Add2Reply)(nil),       // 5: service.demo.Add2Reply
	(*Nest)(nil),            // 6: service.demo.Nest
	(*SubReq)(nil),          // 7: service.demo.SubReq
	(*SubResp)(nil),         // 8: service.demo.SubResp
	(*SubReq2)(nil),         // 9: service.demo.SubReq2
	(*SubResp2)(nil),        // 10: service.demo.SubResp2
	(*RequestBindReq)(nil),  // 11: service.demo.RequestBindReq
	(*RequestBindResp)(nil), // 12: service.demo.RequestBindResp
	(*Nest_NestMsg)(nil),    // 13: service.demo.Nest.NestMsg
}
var file_http_proto_depIdxs = []int32{
	0,  // 0: service.demo.AddReply.e:type_name -> service.demo.EnumTyp
	6,  // 1: service.demo.AddReply.f:type_name -> service.demo.Nest
	6,  // 2: service.demo.Nest.b:type_name -> service.demo.Nest
	13, // 3: service.demo.Nest.d:type_name -> service.demo.Nest.NestMsg
	1,  // 4: service.demo.Nest.e:type_name -> service.demo.Nest.NestEnum
	6,  // 5: service.demo.Nest.NestMsg.c:type_name -> service.demo.Nest
	2,  // 6: service.demo.DemoAPI.Add:input_type -> service.demo.AddRequest
	4,  // 7: service.demo.DemoAPI.Add2:input_type -> service.demo.Add2Request
	7,  // 8: service.demo.DemoAPI.Sub:input_type -> service.demo.SubReq
	9,  // 9: service.demo.DemoAPI.Sub2:input_type -> service.demo.SubReq2
	11, // 10: service.demo.DemoAPI.RequestBind:input_type -> service.demo.RequestBindReq
	3,  // 11: service.demo.DemoAPI.Add:output_type -> service.demo.AddReply
	5,  // 12: service.demo.DemoAPI.Add2:output_type -> service.demo.Add2Reply
	8,  // 13: service.demo.DemoAPI.Sub:output_type -> service.demo.SubResp
	10, // 14: service.demo.DemoAPI.Sub2:output_type -> service.demo.SubResp2
	12, // 15: service.demo.DemoAPI.RequestBind:output_type -> service.demo.RequestBindResp
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_http_proto_init() }
func file_http_proto_init() {
	if File_http_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_http_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Add2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Add2Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubReq2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubResp2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestBindReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestBindResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nest_NestMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_http_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_http_proto_goTypes,
		DependencyIndexes: file_http_proto_depIdxs,
		EnumInfos:         file_http_proto_enumTypes,
		MessageInfos:      file_http_proto_msgTypes,
	}.Build()
	File_http_proto = out.File
	file_http_proto_rawDesc = nil
	file_http_proto_goTypes = nil
	file_http_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DemoAPIClient is the client API for DemoAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DemoAPIClient interface {
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddReply, error)
	Add2(ctx context.Context, in *Add2Request, opts ...grpc.CallOption) (*Add2Reply, error)
	Sub(ctx context.Context, in *SubReq, opts ...grpc.CallOption) (*SubResp, error)
	Sub2(ctx context.Context, in *SubReq2, opts ...grpc.CallOption) (*SubResp2, error)
	RequestBind(ctx context.Context, in *RequestBindReq, opts ...grpc.CallOption) (*RequestBindResp, error)
}

type demoAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewDemoAPIClient(cc grpc.ClientConnInterface) DemoAPIClient {
	return &demoAPIClient{cc}
}

func (c *demoAPIClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddReply, error) {
	out := new(AddReply)
	err := c.cc.Invoke(ctx, "/service.demo.DemoAPI/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *demoAPIClient) Add2(ctx context.Context, in *Add2Request, opts ...grpc.CallOption) (*Add2Reply, error) {
	out := new(Add2Reply)
	err := c.cc.Invoke(ctx, "/service.demo.DemoAPI/Add2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *demoAPIClient) Sub(ctx context.Context, in *SubReq, opts ...grpc.CallOption) (*SubResp, error) {
	out := new(SubResp)
	err := c.cc.Invoke(ctx, "/service.demo.DemoAPI/Sub", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *demoAPIClient) Sub2(ctx context.Context, in *SubReq2, opts ...grpc.CallOption) (*SubResp2, error) {
	out := new(SubResp2)
	err := c.cc.Invoke(ctx, "/service.demo.DemoAPI/Sub2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *demoAPIClient) RequestBind(ctx context.Context, in *RequestBindReq, opts ...grpc.CallOption) (*RequestBindResp, error) {
	out := new(RequestBindResp)
	err := c.cc.Invoke(ctx, "/service.demo.DemoAPI/RequestBind", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DemoAPIServer is the server API for DemoAPI service.
type DemoAPIServer interface {
	Add(context.Context, *AddRequest) (*AddReply, error)
	Add2(context.Context, *Add2Request) (*Add2Reply, error)
	Sub(context.Context, *SubReq) (*SubResp, error)
	Sub2(context.Context, *SubReq2) (*SubResp2, error)
	RequestBind(context.Context, *RequestBindReq) (*RequestBindResp, error)
}

// UnimplementedDemoAPIServer can be embedded to have forward compatible implementations.
type UnimplementedDemoAPIServer struct {
}

func (*UnimplementedDemoAPIServer) Add(context.Context, *AddRequest) (*AddReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedDemoAPIServer) Add2(context.Context, *Add2Request) (*Add2Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add2 not implemented")
}
func (*UnimplementedDemoAPIServer) Sub(context.Context, *SubReq) (*SubResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sub not implemented")
}
func (*UnimplementedDemoAPIServer) Sub2(context.Context, *SubReq2) (*SubResp2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sub2 not implemented")
}
func (*UnimplementedDemoAPIServer) RequestBind(context.Context, *RequestBindReq) (*RequestBindResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestBind not implemented")
}

func RegisterDemoAPIServer(s *grpc.Server, srv DemoAPIServer) {
	s.RegisterService(&_DemoAPI_serviceDesc, srv)
}

func _DemoAPI_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoAPIServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.demo.DemoAPI/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoAPIServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DemoAPI_Add2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Add2Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoAPIServer).Add2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.demo.DemoAPI/Add2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoAPIServer).Add2(ctx, req.(*Add2Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _DemoAPI_Sub_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoAPIServer).Sub(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.demo.DemoAPI/Sub",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoAPIServer).Sub(ctx, req.(*SubReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DemoAPI_Sub2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubReq2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoAPIServer).Sub2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.demo.DemoAPI/Sub2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoAPIServer).Sub2(ctx, req.(*SubReq2))
	}
	return interceptor(ctx, in, info, handler)
}

func _DemoAPI_RequestBind_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestBindReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoAPIServer).RequestBind(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.demo.DemoAPI/RequestBind",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoAPIServer).RequestBind(ctx, req.(*RequestBindReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _DemoAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.demo.DemoAPI",
	HandlerType: (*DemoAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _DemoAPI_Add_Handler,
		},
		{
			MethodName: "Add2",
			Handler:    _DemoAPI_Add2_Handler,
		},
		{
			MethodName: "Sub",
			Handler:    _DemoAPI_Sub_Handler,
		},
		{
			MethodName: "Sub2",
			Handler:    _DemoAPI_Sub2_Handler,
		},
		{
			MethodName: "RequestBind",
			Handler:    _DemoAPI_RequestBind_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "http.proto",
}
